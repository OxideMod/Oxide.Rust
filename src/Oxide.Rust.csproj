<?xml version="1.0" encoding="utf-8"?>
<Project>
  <Import Project="Sdk.props" Sdk="Microsoft.NET.Sdk" />
  <PropertyGroup>
    <Version>2.0.0</Version>
    <AssemblyName>Oxide.Rust</AssemblyName>
    <Authors>Oxide and Contributors</Authors>
    <Description>Rust extension for the Oxide modding framework</Description>
    <RepositoryUrl>https://github.com/OxideMod/Oxide.Rust</RepositoryUrl>
    <PackageLicenseUrl>https://github.com/OxideMod/Oxide.Rust/blob/develop/LICENSE.md</PackageLicenseUrl>
    <PackageProjectUrl>https://github.com/OxideMod/Oxide.Rust</PackageProjectUrl>
    <PackageIconUrl>https://avatars1.githubusercontent.com/u/10712027?s=64</PackageIconUrl>
    <Copyright>Copyright (c) 2014-$([System.DateTime]::Now.Year) $(Authors)</Copyright>
    <PackageTags>gaming modding plugins unity unity3d</PackageTags>
    <TargetFramework>net35</TargetFramework>
    <GeneratePackageOnBuild>True</GeneratePackageOnBuild>
    <ManagedDir>RustDedicated_Data\Managed</ManagedDir>
    <SteamAppId>258550</SteamAppId>
    <SteamBranch>public</SteamBranch>
    <SteamLogin>anonymous</SteamLogin>
    <!--
      Workaround for targeting net35 with dotnet CLI
      https://github.com/Microsoft/msbuild/issues/1333#issuecomment-296346352
    -->
    <FrameworkPathOverride Condition="'$(TargetFramework)' == 'net35' And '$(OS)' == 'Windows_NT'">C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v3.5\Profile\Client</FrameworkPathOverride>
    <FrameworkPathOverride Condition="'$(TargetFramework)' == 'net35' And '$(OS)' == 'OSX'">/Library/Frameworks/Mono.framework/Versions/Current/lib/mono/2.0-api</FrameworkPathOverride>
    <ThisAssemblyNamespace>Oxide.Game.Rust</ThisAssemblyNamespace>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="GitInfo" Version="2.0.*" />
    <PackageReference Include="Oxide.References" Version="2.0.*" />
    <PackageReference Include="Oxide.Core" Version="2.0.*" />
    <PackageReference Include="Oxide.CSharp" Version="2.0.*" />
    <PackageReference Include="Oxide.MySql" Version="2.0.*" />
    <PackageReference Include="Oxide.SQLite" Version="2.0.*" />
    <PackageReference Include="Oxide.Unity" Version="2.0.*" />
    <Reference Include="Assembly-CSharp">
      <HintPath>Dependencies\Patched\$(ManagedDir)\Assembly-CSharp.dll</HintPath>
    </Reference>
    <Reference Include="Assembly-CSharp-firstpass">
      <HintPath>Dependencies\Patched\$(ManagedDir)\Assembly-CSharp-firstpass.dll</HintPath>
    </Reference>
    <Reference Include="Facepunch.Console">
      <HintPath>Dependencies\Patched\$(ManagedDir)\Facepunch.Console.dll</HintPath>
    </Reference>
    <Reference Include="Facepunch.Network">
      <HintPath>Dependencies\Patched\$(ManagedDir)\Facepunch.Network.dll</HintPath>
    </Reference>
    <Reference Include="Facepunch.Rcon">
      <HintPath>Dependencies\Patched\$(ManagedDir)\Facepunch.Rcon.dll</HintPath>
    </Reference>
    <Reference Include="Facepunch.Steamworks">
      <HintPath>Dependencies\Patched\$(ManagedDir)\Facepunch.Steamworks.dll</HintPath>
    </Reference>
    <Reference Include="Facepunch.System">
      <HintPath>Dependencies\Patched\$(ManagedDir)\Facepunch.System.dll</HintPath>
    </Reference>
    <Reference Include="Facepunch.Unity">
      <HintPath>Dependencies\Patched\$(ManagedDir)\Facepunch.Unity.dll</HintPath>
    </Reference>
    <Reference Include="Facepunch.UnityEngine">
      <HintPath>Dependencies\Patched\$(ManagedDir)\Facepunch.UnityEngine.dll</HintPath>
    </Reference>
    <Reference Include="mscorlib">
      <HintPath>Dependencies\Patched\$(ManagedDir)\mscorlib.dll</HintPath>
    </Reference>
    <Reference Include="System">
      <HintPath>Dependencies\Patched\$(ManagedDir)\System.dll</HintPath>
    </Reference>
    <Reference Include="Rust.Data">
      <HintPath>Dependencies\Patched\$(ManagedDir)\Rust.Data.dll</HintPath>
    </Reference>
    <Reference Include="Rust.Global">
      <HintPath>Dependencies\Patched\$(ManagedDir)\Rust.Global.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine">
      <HintPath>Dependencies\Patched\$(ManagedDir)\UnityEngine.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.UI">
      <HintPath>Dependencies\Patched\$(ManagedDir)\UnityEngine.UI.dll</HintPath>
    </Reference>
    <Reference Include="websocket-sharp">
      <HintPath>Dependencies\Patched\$(ManagedDir)\websocket-sharp.dll</HintPath>
    </Reference>
    <None Remove="Bundle\**; Files\**; Patched\**; **\Original\**; *.config; *.opj" />
  </ItemGroup>
  <Import Project="Sdk.targets" Sdk="Microsoft.NET.Sdk" />
  <Target Name="Clean">
    <RemoveDir Directories="$(ProjectDir)\bin\Bundle\$(PackageId)" Condition="Exists('$(ProjectDir)\bin\Bundle\$(PackageId)')" />
  </Target>
  <Target Name="ChangeAliasesOfStrongNameAssemblies" BeforeTargets="FindReferenceAssembliesForReferences;ResolveReferences">
    <ItemGroup>
      <ReferencePath Condition="'%(FileName)' == 'Oxide.References'">
        <Aliases>Oxide</Aliases>
      </ReferencePath>
    </ItemGroup>
  </Target>
  <Target Name="BeforeBuild">
    <!-- Currently only works on Windows due to Windows-only tools used -->
    <Exec Command="powershell -ExecutionPolicy Bypass &quot;$(SolutionDir)\Steam.ps1&quot; -project $(AssemblyName) -dotnet $(TargetFramework) -appid $(SteamAppId) -branch '$(SteamBranch)' -managed '$(ManagedDir)'" />
  </Target>
  <Target Name="AfterBuild">
    <ItemGroup>
      <CoreFiles Include="$(TargetDir)\Oxide.*.dll" />
      <PatchedFiles Include="$(ProjectDir)\Dependencies\Patched\$(ManagedDir)\Assembly-CSharp.dll" />
      <PatchedFiles Include="$(ProjectDir)\Dependencies\Patched\$(ManagedDir)\Facepunch.Console.dll" />
      <PatchedFiles Include="$(ProjectDir)\Dependencies\Patched\$(ManagedDir)\Facepunch.Rcon.dll" />
      <ContentFiles Include="$(SolutionDir)\packages\oxide.csharp\**\lib\any\*.*" />
      <ContentFiles Include="$(SolutionDir)\packages\oxide.references\**\lib\any\*.*" />
      <ContentFiles Include="$(SolutionDir)\packages\oxide.mysql\**\lib\any\*.*; $(SolutionDir)\packages\oxide.mysql\**\lib\$(TargetFramework)\*.*" />
      <ContentFiles Include="$(SolutionDir)\packages\oxide.sqlite\**\lib\any\*.*; $(SolutionDir)\packages\oxide.sqlite\**\lib\$(TargetFramework)\*.*" />
      <ContentX64Files Include="$(SolutionDir)\packages\oxide.references\**\lib\any\x64\*.*; $(SolutionDir)\packages\oxide.sqlite\**\lib\any\x64\*.*" />
      <ContentX86Files Include="$(SolutionDir)\packages\oxide.references\**\lib\any\x86\*.*; $(SolutionDir)\packages\oxide.sqlite\**\lib\any\x86\*.*" />
    </ItemGroup>
    <Copy SourceFiles="@(CoreFiles)" DestinationFiles="@(CoreFiles->'$(ProjectDir)\bin\Bundle\$(PackageId)\$(ManagedDir)\%(RecursiveDir)%(Filename)%(Extension)')" />
    <Copy SourceFiles="@(PatchedFiles)" DestinationFiles="@(PatchedFiles->'$(ProjectDir)\bin\Bundle\$(PackageId)\$(ManagedDir)\%(RecursiveDir)%(Filename)%(Extension)')" />
    <Copy SourceFiles="@(ContentFiles)" DestinationFiles="@(ContentFiles->'$(ProjectDir)\bin\Bundle\$(PackageId)\$(ManagedDir)\%(Filename)%(Extension)')" />
    <Copy SourceFiles="@(ContentX64Files)" DestinationFiles="@(ContentX64Files->'$(ProjectDir)\bin\Bundle\$(PackageId)\$(ManagedDir)\x64\%(Filename)%(Extension)')" />
    <Copy SourceFiles="@(ContentX86Files)" DestinationFiles="@(ContentX86Files->'$(ProjectDir)\bin\Bundle\$(PackageId)\$(ManagedDir)\x86\%(Filename)%(Extension)')" />
    <!--<Exec Command="pdb2mdb %(PatchedFiles.Identity)" Condition="'$(Configuration)' == 'Debug' And '$(OS)' == 'Windows_NT'" IgnoreExitCode="true" />-->
  </Target>
  <Target Name="LocalDeploy" AfterTargets="AfterBuild" Condition="Exists('$(SolutionDir)\.deploy')">
    <Exec Command="start /b /wait taskkill /f /im RustDedicated.exe /fi &quot;memusage gt 2&quot;" Condition="'$(OS)' == 'Windows_NT'" />
    <Exec Command="start /b /wait taskkill /f /im CSharpCompiler.exe /fi &quot;memusage gt 2&quot;" Condition="'$(OS)' == 'Windows_NT'" />
    <ReadLinesFromFile File="$(SolutionDir)\.deploy">
      <Output PropertyName="DeployPath" TaskParameter="Lines" />
    </ReadLinesFromFile>
    <ItemGroup>
      <DeployFiles Include="$(ProjectDir)\bin\Bundle\$(PackageId)\**\*.*" />
    </ItemGroup>
    <Copy Condition="'$(DeployPath)' != ''" SourceFiles="@(DeployFiles)" DestinationFiles="@(DeployFiles->'$(DeployPath)\%(RecursiveDir)%(Filename)%(Extension)')" />
  </Target>
</Project>
